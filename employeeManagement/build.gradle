plugins {
  id 'java'
  id 'war'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

dependencies {
  compileOnly('javax.servlet:javax.servlet-api:4.0.1')

  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
  implementation group: 'jstl', name: 'jstl', version: '1.2'
  implementation group: 'org.thymeleaf', name: 'thymeleaf-spring4', version: '3.0.9.RELEASE'
  implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '1.2'
  implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time', version: '3.0.4.RELEASE'
  // https://mvnrepository.com/artifact/mysql/mysql-connector-java
  implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'
  implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
  implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'
  implementation 'javax.xml.bind:jaxb-api:2.3.1'
  implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
  implementation group: 'org.springframework', name: 'spring-core', version: '4.3.17.RELEASE'
  implementation group: 'org.springframework', name: 'spring-context', version: '4.3.17.RELEASE'
  implementation group: 'org.springframework', name: 'spring-beans', version: '4.3.17.RELEASE'
  implementation group: 'org.springframework', name: 'spring-web', version: '4.3.17.RELEASE'
  implementation group: 'org.springframework', name: 'spring-webmvc', version: '4.3.17.RELEASE'
  implementation group : 'org.hibernate.validator',name : 'hibernate-validator', version: '6.2.0.Final'
  implementation 'org.mapstruct:mapstruct:1.4.2.Final'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
}

test {
useJUnitPlatform()}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }